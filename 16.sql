ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

CREATE USER KYA
IDENTIFIED BY Pa$$w0rd 
DEFAULT TABLESPACE Users 
QUOTA UNLIMITED ON Users;

GRANT CONNECT TO KYA;
GRANT CREATE TABLESPACE TO KYA;
GRANT CREATE TABLE TO KYA;
GRANT CREATE SESSION TO KYA;

ALTER USER KYA QUOTA UNLIMITED ON ts1;
ALTER USER KYA QUOTA UNLIMITED ON ts2;
ALTER USER KYA QUOTA UNLIMITED ON ts3;

CREATE TABLESPACE ts1 DATAFILE 'D:\16\ts1.DAT'
SIZE 50M REUSE AUTOEXTEND ON NEXT 10M MAXSIZE 100M;
CREATE TABLESPACE ts2 DATAFILE 'D:\16\ts2.DAT'
SIZE 50M REUSE AUTOEXTEND ON NEXT 10M MAXSIZE 100M;
CREATE TABLESPACE ts3 DATAFILE 'D:\16\ts3.DAT'
SIZE 50M REUSE AUTOEXTEND ON NEXT 10M MAXSIZE 100M;

DROP TABLESPACE ts1 INCLUDING CONTENTS AND DATAFILES;
DROP TABLESPACE ts2 INCLUDING CONTENTS AND DATAFILES;
DROP TABLESPACE ts3 INCLUDING CONTENTS AND DATAFILES;

--Task 1

CREATE TABLE t_range(t_id NUMBER)
PARTITION BY RANGE(t_id)
(
PARTITION p1 VALUES LESS THAN (100) TABLESPACE ts1,
PARTITION p2 VALUES LESS THAN (200) TABLESPACE ts2,
PARTITION p3 VALUES LESS THAN (MAXVALUE) TABLESPACE ts3
);

INSERT INTO t_range(t_id) VALUES (50);
INSERT INTO t_range(t_id) VALUES (100);
INSERT INTO t_range(t_id) VALUES (150);
INSERT INTO t_range(t_id) VALUES (200);
INSERT INTO t_range(t_id) VALUES (250);

SELECT * FROM t_range;
SELECT * FROM t_range PARTITION(p1);
SELECT * FROM t_range PARTITION(p2);
SELECT * FROM t_range PARTITION(p3);

ALTER TABLE t_range ENABLE ROW MOVEMENT;
UPDATE t_range SET t_id = 350 WHERE t_id = 50;

DROP TABLE t_range;

--Task 2

CREATE TABLE t_interval(t_date DATE)
PARTITION BY RANGE(t_date)
INTERVAL (INTERVAL '1' YEAR) STORE IN (ts1)
(
PARTITION p1 VALUES LESS THAN (to_date('1-1-2000', 'dd-mm-yyyy')) TABLESPACE ts2,
PARTITION p2 VALUES LESS THAN (to_date('1-1-2010', 'dd-mm-yyyy')) TABLESPACE ts3
);

INSERT INTO t_interval(t_date) VALUES ('01-01-1990');
INSERT INTO t_interval(t_date) VALUES ('01-01-1995');
INSERT INTO t_interval(t_date) VALUES ('01-01-2000');
INSERT INTO t_interval(t_date) VALUES ('01-01-2005');
INSERT INTO t_interval(t_date) VALUES ('01-01-2010');
INSERT INTO t_interval(t_date) VALUES ('01-01-2015');

SELECT * FROM t_interval;
SELECT * FROM user_tab_partitions WHERE tablespace_name = 'TS1';
SELECT * FROM user_tab_partitions WHERE tablespace_name = 'TS2';
SELECT * FROM user_tab_partitions WHERE tablespace_name = 'TS3';
SELECT * FROM t_interval PARTITION(p1);
SELECT * FROM t_interval PARTITION(p2);

ALTER TABLE t_interval ENABLE ROW MOVEMENT;
UPDATE t_interval SET t_date = to_date('1.1.2007', 'dd-mm-yyyy') WHERE t_date = to_date('1-1-2015', 'dd-mm-yyyy');

DROP TABLE t_interval;

--Task 3

CREATE TABLE t_hash(t_str VARCHAR2(50))
PARTITION BY HASH(t_str)
(
PARTITION p1 TABLESPACE ts1,
PARTITION p2 TABLESPACE ts2,
PARTITION p3 TABLESPACE ts3
);

INSERT INTO t_hash(t_str) VALUES('11111');
INSERT INTO t_hash(t_str) VALUES('22222');
INSERT INTO t_hash(t_str) VALUES('33333');
INSERT INTO t_hash(t_str) VALUES('44444');
INSERT INTO t_hash(t_str) VALUES('55555');

SELECT * FROM t_hash; 
SELECT * FROM t_hash PARTITION(p1);
SELECT * FROM t_hash PARTITION(p2);
SELECT * FROM t_hash PARTITION(p3);

ALTER TABLE t_hash ENABLE ROW MOVEMENT;
UPDATE t_hash SET t_str = '51515' WHERE t_str = '55555';

DROP TABLE t_hash;

--Task 4

CREATE TABLE t_list(t_char char(3))
PARTITION BY LIST(t_char)
(
PARTITION p1 VALUES ('1') TABLESPACE ts1,
PARTITION p2 VALUES ('2') TABLESPACE ts2,
PARTITION p3 VALUES ('3') TABLESPACE ts3
);

INSERT INTO t_list(t_char) VALUES ('1');
INSERT INTO t_list(t_char) VALUES ('2');
INSERT INTO t_list(t_char) VALUES ('3');
--INSERT INTO t_list(t_char) VALUES ('4');

SELECT * FROM t_list;
SELECT * FROM t_list PARTITION(p1);
SELECT * FROM t_list PARTITION(p2);
SELECT * FROM t_list PARTITION(p3);

ALTER TABLE t_list ENABLE ROW MOVEMENT;
UPDATE t_list SET t_char = '3' WHERE t_char = '1';

DROP TABLE t_list;

--Task 7

ALTER TABLE t_range MERGE PARTITIONS
p2, p3 INTO PARTITION p4;

SELECT * FROM t_range PARTITION(p1);
--SELECT * FROM t_range PARTITION(p2);
--SELECT * FROM t_range PARTITION(p3);
SELECT * FROM t_range PARTITION(p4);

--Task 8

ALTER TABLE t_range SPLIT PARTITION p4 AT 
(200) INTO (PARTITION p2 TABLESPACE ts2, PARTITION p3 TABLESPACE ts3);

SELECT * FROM t_range PARTITION(p1);
SELECT * FROM t_range PARTITION(p2);
SELECT * FROM t_range PARTITION(p3);
--SELECT * FROM t_range PARTITION(p4);

--Task 9

CREATE TABLE t_range_temp(t_id NUMBER);

ALTER TABLE t_range EXCHANGE PARTITION p3 WITH TABLE t_range_temp;
SELECT * FROM t_range PARTITION(p3);
SELECT * FROM t_range_temp;

DROP TABLE t_range_temp;

--Reference partition

CREATE TABLE t_parent(t_id NUMBER CONSTRAINT t_pk PRIMARY KEY)
PARTITION BY RANGE(t_id)
(
PARTITION p1 VALUES LESS THAN (100) TABLESPACE ts1,
PARTITION p2 VALUES LESS THAN (200) TABLESPACE ts2,
PARTITION p3 VALUES LESS THAN (MAXVALUE) TABLESPACE ts3
);

CREATE TABLE t_children(t_id NUMBER, t_parent NUMBER NOT NULL CONSTRAINT t_fk REFERENCES t_parent(t_id))
PARTITION BY REFERENCE(t_fk);

INSERT INTO t_parent(t_id) VALUES (50);
INSERT INTO t_parent(t_id) VALUES (150);
INSERT INTO t_parent(t_id) VALUES (250);

SELECT * FROM t_parent;
SELECT * FROM t_parent PARTITION(p1);
SELECT * FROM t_parent PARTITION(p2);
SELECT * FROM t_parent PARTITION(p3);

INSERT INTO t_children(t_id, t_parent) VALUES (50, 50);
INSERT INTO t_children(t_id, t_parent) VALUES (150, 50);
INSERT INTO t_children(t_id, t_parent) VALUES (50, 150);
INSERT INTO t_children(t_id, t_parent) VALUES (150, 150);
INSERT INTO t_children(t_id, t_parent) VALUES (50, 250);
INSERT INTO t_children(t_id, t_parent) VALUES (150, 250);

SELECT * FROM t_children;
SELECT * FROM t_children PARTITION(p1);
SELECT * FROM t_children PARTITION(p2);
SELECT * FROM t_children PARTITION(p3);

DROP TABLE t_parent;
DROP TABLE t_children;





